/**
 * 在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。
 * 请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数
 */
// 1  2  3  4

// 5  6  7  8

// 9 10 11 12

/**
 * 给定元素2
 * 思路: 首先需要从数组中选取一个元素，来和给定的目标元素进行比较；
 * 这个元素的选取需要遵循这个原则： 选取的元素通过比较可以缩小数组的查找范围
 * 假如选取左下角元素9进行比较，9>2，那么可以去除9所在的行；向上移动到5; 5>2
 * 可以去除5所在的行，继续上移到1 ,1<2;向右移动到2，
 */

function find(arr, target) {
    let i = arr.length - 1; // y 方向长度
    let j = arr[0].length - 1; // x 方向长度
    for (; i >= 0; i--) {
        for (let m = 0; m <= j; m++) {
            if (arr[i][m] > target) {
                break;
            } else if (arr[i][m] < target) {
                continue
            } else {
                return [i, m]
            }
        }
    }
}

let arr=[[1,2,3,4],[5,6,7,8],[9,10,11,12]]
console.log(find(arr,2))